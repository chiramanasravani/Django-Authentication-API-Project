[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "djangoauthapi_app.models",
        "description": "djangoauthapi_app.models",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "renderers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "Util",
        "importPath": "djangoauthapi_app.utils",
        "description": "djangoauthapi_app.utils",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.utils",
        "documentation": {}
    },
    {
        "label": "smart_str",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "force_bytes",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "DjangoUnicodeDecodeError",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_decode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_encode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "PasswordResetTokenGenerator",
        "importPath": "django.contrib.auth.tokens",
        "description": "django.contrib.auth.tokens",
        "isExtraImport": true,
        "detail": "django.contrib.auth.tokens",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "SendPasswordResetEmailView",
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "UserChangePasswordView",
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "UserLoginView",
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "UserProfileView",
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "UserRegistrationView",
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "UserPasswordResetView",
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "EmailMessage",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "UserRenderer",
        "importPath": "djangoauthapi_app.renderers",
        "description": "djangoauthapi_app.renderers",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.renderers",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "SendPasswordResetEmailSerializer",
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "UserChangePasswordSeializer",
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "UserLoginSerializer",
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "UserPasswordResetSerializer",
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "UserProfileSerializer",
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "UserRegistrationSerializer",
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "isExtraImport": true,
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "dotenv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dotenv",
        "description": "dotenv",
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "djangoauthapi_app.migrations.0001_initial",
        "description": "djangoauthapi_app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('password', models.CharField(max_length=128, verbose_name='password')),",
        "detail": "djangoauthapi_app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "djangoauthapi_app.migrations.0002_user_is_staff",
        "description": "djangoauthapi_app.migrations.0002_user_is_staff",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('djangoauthapi_app', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='is_staff',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "djangoauthapi_app.migrations.0002_user_is_staff",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "djangoauthapi_app.migrations.0003_remove_user_is_staff",
        "description": "djangoauthapi_app.migrations.0003_remove_user_is_staff",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('djangoauthapi_app', '0002_user_is_staff'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='user',\n            name='is_staff',\n        ),\n    ]",
        "detail": "djangoauthapi_app.migrations.0003_remove_user_is_staff",
        "documentation": {}
    },
    {
        "label": "UserModelAdmin",
        "kind": 6,
        "importPath": "djangoauthapi_app.admin",
        "description": "djangoauthapi_app.admin",
        "peekOfCode": "class UserModelAdmin(BaseUserModelAdmin):\n    # The fields to be used in displaying the User model.\n    list_display = [\"id\", \"email\", \"name\", \"tc\", \"is_admin\"]\n    list_filter = [\"is_admin\"]\n    fieldsets = [\n        (None, {\"fields\": [\"email\", \"password\"]}),  # Corrected this line\n        (\"Personal info\", {\"fields\": [\"name\", \"tc\"]}),\n        (\"Permissions\", {\"fields\": [\"is_admin\"]}),\n    ]\n    add_fieldsets = [",
        "detail": "djangoauthapi_app.admin",
        "documentation": {}
    },
    {
        "label": "DjangoauthapiAppConfig",
        "kind": 6,
        "importPath": "djangoauthapi_app.apps",
        "description": "djangoauthapi_app.apps",
        "peekOfCode": "class DjangoauthapiAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'djangoauthapi_app'",
        "detail": "djangoauthapi_app.apps",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "djangoauthapi_app.models",
        "description": "djangoauthapi_app.models",
        "peekOfCode": "class UserManager(BaseUserManager):\n    def create_user(self, email, name, tc, password=None):\n        \"\"\"\n        Creates and saves a User with the given email, name, tc, and password.\n        \"\"\"\n        if not email:\n            raise ValueError(\"User must have an email address\")\n        user = self.model(\n            email=self.normalize_email(email),\n            name=name,",
        "detail": "djangoauthapi_app.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "djangoauthapi_app.models",
        "description": "djangoauthapi_app.models",
        "peekOfCode": "class User(AbstractBaseUser):\n    name = models.CharField(max_length=50)\n    email = models.EmailField(max_length=100, unique=True)  # Unique email\n    tc = models.BooleanField()  # Terms and Conditions field\n    is_active = models.BooleanField(default=True)\n    is_admin = models.BooleanField(default=False)\n    is_staff = models.BooleanField(default=False)  # Staff status\n    create_at = models.DateTimeField(auto_now_add=True)\n    update_at = models.DateTimeField(auto_now=True)\n    objects = UserManager()  # Use the custom manager",
        "detail": "djangoauthapi_app.models",
        "documentation": {}
    },
    {
        "label": "UserRenderer",
        "kind": 6,
        "importPath": "djangoauthapi_app.renderers",
        "description": "djangoauthapi_app.renderers",
        "peekOfCode": "class UserRenderer(renderers.JSONRenderer):\n    charset=\"utf-8\"\n    def render(self, data, accepted_media_type=None, renderer_context=None):\n        response =\"\"\n        if \"ErrorDetail\" in str(data):\n            response = json.dumps({\"error\":data})\n        else:\n            response = json.dumps(data)\n        return response",
        "detail": "djangoauthapi_app.renderers",
        "documentation": {}
    },
    {
        "label": "UserRegistrationSerializer",
        "kind": 6,
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "peekOfCode": "class UserRegistrationSerializer(serializers.ModelSerializer):\n    password = serializers.CharField(write_only=True)\n    confirm_password = serializers.CharField(write_only=True)\n    class Meta:\n        model = get_user_model()\n        fields = ['email', 'name', 'tc', 'password', 'confirm_password']\n    def validate(self, attrs):\n        password = attrs.get('password')\n        confirm_password = attrs.get('confirm_password')\n        # Check if the passwords match",
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "UserLoginSerializer",
        "kind": 6,
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "peekOfCode": "class UserLoginSerializer(serializers.ModelSerializer):\n    email = serializers.EmailField(max_length=255)\n    password = serializers.CharField(write_only=True)\n    class Meta:\n        model = get_user_model()  # Use get_user_model() for better flexibility\n        fields = ['email', 'password']\n    def validate(self, attrs):\n        email = attrs.get('email')\n        password = attrs.get('password')\n        user = authenticate(email=email, password=password)",
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "UserProfileSerializer",
        "kind": 6,
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "peekOfCode": "class UserProfileSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['id', 'name', 'email',]\nclass UserChangePasswordSeializer(serializers.Serializer):\n    password = serializers.CharField(max_length=255, style={'input_type': 'password'}, write_only=True)\n    confirm_password = serializers.CharField(max_length=255, style={'input_type': 'password'}, write_only=True)\n    # confirm_password = serializers.CharField(max_length=255, style={'input_type': 'password'}, write\n    class Meta:\n        fields = ['password', 'confirm_password']",
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "UserChangePasswordSeializer",
        "kind": 6,
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "peekOfCode": "class UserChangePasswordSeializer(serializers.Serializer):\n    password = serializers.CharField(max_length=255, style={'input_type': 'password'}, write_only=True)\n    confirm_password = serializers.CharField(max_length=255, style={'input_type': 'password'}, write_only=True)\n    # confirm_password = serializers.CharField(max_length=255, style={'input_type': 'password'}, write\n    class Meta:\n        fields = ['password', 'confirm_password']\n    def validate(self, attrs):\n        password = attrs.get('password')\n        confirm_password = attrs.get('confirm_password')\n        user = self._context.get('user')",
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "SendPasswordResetEmailSerializer",
        "kind": 6,
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "peekOfCode": "class SendPasswordResetEmailSerializer(serializers.Serializer):\n    email = serializers.EmailField(max_length=255)\n    class Meta:\n        fields = ['email']\n    def validate(self, attrs):\n        email = attrs.get('email')\n        if User.objects.filter(email=email).exists():\n            user = User.objects.get(email=email)\n            uid = urlsafe_base64_encode(force_bytes(user.id))\n            print(\"Encoded UID:\", uid)",
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "UserPasswordResetSerializer",
        "kind": 6,
        "importPath": "djangoauthapi_app.serializers",
        "description": "djangoauthapi_app.serializers",
        "peekOfCode": "class UserPasswordResetSerializer(serializers.Serializer):\n    password = serializers.CharField(max_length=255, style={'input_type': 'password'}, write_only=True)\n    confirm_password = serializers.CharField(max_length=255, style={'input_type': 'password'}, write_only=True)\n    # confirm_password = serializers.CharField(max_length=255, style={'input_type': 'password'}, write\n    class Meta:\n        fields = ['password', 'confirm_password']\n    def validate(self, attrs):\n        try:\n            password = attrs.get('password')\n            confirm_password = attrs.get('confirm_password')",
        "detail": "djangoauthapi_app.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "djangoauthapi_app.urls",
        "description": "djangoauthapi_app.urls",
        "peekOfCode": "urlpatterns = [\n       path('register/', UserRegistrationView.as_view(), name='register'),\n       path('login/', UserLoginView.as_view(), name='login'),\n       path('profile/', UserProfileView.as_view(), name='profile'),\n       path('changepassword/', UserChangePasswordView.as_view(), name='changepassword'),\n       path('send_reset_pws_email/', SendPasswordResetEmailView.as_view(), name='send_reset_pws_email'),\n       path('reset_password/<uid>/<token>/', UserPasswordResetView.as_view(), name='reset_password')\n]",
        "detail": "djangoauthapi_app.urls",
        "documentation": {}
    },
    {
        "label": "Util",
        "kind": 6,
        "importPath": "djangoauthapi_app.utils",
        "description": "djangoauthapi_app.utils",
        "peekOfCode": "class Util:\n    @staticmethod\n    def send_email(data):\n        email = EmailMessage(\n            subject=data['subject'],\n            body=data['body'],\n            from_email=os.environ.get('EMAIL_FROM'),  # Use EMAIL_FROM from environment variables\n            to=[data['to_email']]\n        )\n        # Send the email",
        "detail": "djangoauthapi_app.utils",
        "documentation": {}
    },
    {
        "label": "UserRegistrationView",
        "kind": 6,
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "peekOfCode": "class UserRegistrationView(APIView):\n    renderer_classes = [UserRenderer]\n    def post(self, request, format=None):\n        serializer = UserRegistrationSerializer(data=request.data)\n        if serializer.is_valid(raise_exception=True):\n            user = serializer.save()\n            token = get_tokens_for_user(user)\n            return Response({'token': token, 'msg':'Registration successful'}, status=status.HTTP_201_CREATED)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n# Login",
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "UserLoginView",
        "kind": 6,
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "peekOfCode": "class UserLoginView(APIView):\n    renderer_classes = [UserRenderer]\n    def post(self, request, format=None):\n        serializer = UserLoginSerializer(data=request.data)\n        if serializer.is_valid(raise_exception=True):\n            email = serializer.validated_data.get('email')\n            password = serializer.validated_data.get('password')\n            # Authenticate user using email and password\n            user = authenticate(request, email=email, password=password)\n            if user is not None:",
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "UserProfileView",
        "kind": 6,
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "peekOfCode": "class UserProfileView(APIView):\n    renderer_classes = [UserRenderer]\n    permission_classes = [IsAuthenticated]\n    def get(self, request, format=None):\n        serializer = UserProfileSerializer (request.user)\n        return Response(serializer.data, status=status.HTTP_200_OK)\nclass UserChangePasswordView(APIView):\n    renderer_classes = [UserRenderer]\n    permission_classes = [IsAuthenticated]\n    def post(self, request, format=None):",
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "UserChangePasswordView",
        "kind": 6,
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "peekOfCode": "class UserChangePasswordView(APIView):\n    renderer_classes = [UserRenderer]\n    permission_classes = [IsAuthenticated]\n    def post(self, request, format=None):\n        serializer = UserChangePasswordSeializer (data=request.data, context={'user': request.user})\n        if serializer.is_valid(raise_exception=True):\n            return Response({'msg': 'Password Change successful'}, status=status.HTTP_200_OK)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\nclass SendPasswordResetEmailView(APIView):\n    renderer_classes = [UserRenderer",
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "SendPasswordResetEmailView",
        "kind": 6,
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "peekOfCode": "class SendPasswordResetEmailView(APIView):\n    renderer_classes = [UserRenderer\n                        ]\n    def post(self, request, format=None):\n        serializer = SendPasswordResetEmailSerializer(data=request.data)\n        if serializer.is_valid(raise_exception=True):\n            return Response({'msg': 'Password Reset Email sent'}, status=status.HTTP_200_OK)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\nclass UserPasswordResetView(APIView):\n    renderer_classes = [UserRenderer]",
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "UserPasswordResetView",
        "kind": 6,
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "peekOfCode": "class UserPasswordResetView(APIView):\n    renderer_classes = [UserRenderer]\n    def post(self, request, uid, token, format=None):\n        serializer = UserPasswordResetSerializer(data=request.data, context={'uid':uid, 'token':token})\n        if serializer.is_valid(raise_exception=True):\n            return Response({'msg': 'Password Reset successful'}, status=status.HTTP_200_OK)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)",
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "get_tokens_for_user",
        "kind": 2,
        "importPath": "djangoauthapi_app.views",
        "description": "djangoauthapi_app.views",
        "peekOfCode": "def get_tokens_for_user(user):\n    refresh = RefreshToken.for_user(user)\n    return {\n        'refresh': str(refresh),\n        'access': str(refresh.access_token),\n    }\n# Register\nclass UserRegistrationView(APIView):\n    renderer_classes = [UserRenderer]\n    def post(self, request, format=None):",
        "detail": "djangoauthapi_app.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "djangoauthapi_project.asgi",
        "description": "djangoauthapi_project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "djangoauthapi_project.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-ai_ro(5fl8ju#o*9mwsm$iecqgc-1ia+bjc*(dla#a7ht=8i28'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-ai_ro(5fl8ju#o*9mwsm$iecqgc-1ia+bjc*(dla#a7ht=8i28'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'rest_framework_simplejwt',\n    'corsheaders',",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    \"corsheaders.middleware.CorsMiddleware\",\n]",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "ROOT_URLCONF = 'djangoauthapi_project.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "WSGI_APPLICATION = 'djangoauthapi_project.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'djangoauthapi_project',\n        'USER': 'root',\n        'PASSWORD': 'Chanu1800@',\n        'HOST': '127.0.0.1',",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'djangoauthapi_project',\n        'USER': 'root',\n        'PASSWORD': 'Chanu1800@',\n        'HOST': '127.0.0.1',\n        'PORT': '3306',\n    }\n}",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n}\n# Internationalization\n# https://docs.djangoproject.com/en/5.1/topics/i18n/\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'djangoauthapi_app.User'",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'djangoauthapi_app.User'\nSIMPLE_JWT = {",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'djangoauthapi_app.User'\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=20),",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'djangoauthapi_app.User'\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=20),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=1),\n    \"AUTH_HEADER_TYPES\": (\"Bearer\",),\n    \"AUTH_HEADER_NAME\": \"HTTP_AUTHORIZATION\",",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'djangoauthapi_app.User'\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=20),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=1),\n    \"AUTH_HEADER_TYPES\": (\"Bearer\",),\n    \"AUTH_HEADER_NAME\": \"HTTP_AUTHORIZATION\",\n    \"USER_ID_FIELD\": \"id\",\n    \"USER_ID_CLAIM\": \"user_id\",\n    \"USER_AUTHENTICATION_RULE\": \"rest_framework_simplejwt.authentication.default_user_authentication_rule\",",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'djangoauthapi_app.User'\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=20),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=1),\n    \"AUTH_HEADER_TYPES\": (\"Bearer\",),\n    \"AUTH_HEADER_NAME\": \"HTTP_AUTHORIZATION\",\n    \"USER_ID_FIELD\": \"id\",\n    \"USER_ID_CLAIM\": \"user_id\",\n    \"USER_AUTHENTICATION_RULE\": \"rest_framework_simplejwt.authentication.default_user_authentication_rule\",\n    \"AUTH_TOKEN_CLASSES\": (\"rest_framework_simplejwt.tokens.AccessToken\",),",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=20),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=1),\n    \"AUTH_HEADER_TYPES\": (\"Bearer\",),\n    \"AUTH_HEADER_NAME\": \"HTTP_AUTHORIZATION\",\n    \"USER_ID_FIELD\": \"id\",\n    \"USER_ID_CLAIM\": \"user_id\",\n    \"USER_AUTHENTICATION_RULE\": \"rest_framework_simplejwt.authentication.default_user_authentication_rule\",\n    \"AUTH_TOKEN_CLASSES\": (\"rest_framework_simplejwt.tokens.AccessToken\",),\n    \"TOKEN_TYPE_CLAIM\": \"token_type\",",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "PASSWORD_RESET_TIME_OUT",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "PASSWORD_RESET_TIME_OUT = 900  #900 seconds = 15 minutes\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n    \"http://127.0.0.1:9000\",\n]\n# Email Backend Configuration\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = \"smtp.gmail.com\"  # Using Gmail SMTP server (update if using another provider)\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True  # Enabling TLS for security",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n    \"http://127.0.0.1:9000\",\n]\n# Email Backend Configuration\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = \"smtp.gmail.com\"  # Using Gmail SMTP server (update if using another provider)\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True  # Enabling TLS for security\n# Get credentials from the environment variables",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "EMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = \"smtp.gmail.com\"  # Using Gmail SMTP server (update if using another provider)\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True  # Enabling TLS for security\n# Get credentials from the environment variables\nEMAIL_HOST_USER = 'sravanichiramana1800@gmail.com'\nEMAIL_HOST_PASSWORD = 'Chanu1800@'  # App password if 2FA is enabled\nDEFAULT_FROM_EMAIL = 'sravanichiramana1800@gmail.com'",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "EMAIL_HOST = \"smtp.gmail.com\"  # Using Gmail SMTP server (update if using another provider)\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True  # Enabling TLS for security\n# Get credentials from the environment variables\nEMAIL_HOST_USER = 'sravanichiramana1800@gmail.com'\nEMAIL_HOST_PASSWORD = 'Chanu1800@'  # App password if 2FA is enabled\nDEFAULT_FROM_EMAIL = 'sravanichiramana1800@gmail.com'",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_USE_TLS = True  # Enabling TLS for security\n# Get credentials from the environment variables\nEMAIL_HOST_USER = 'sravanichiramana1800@gmail.com'\nEMAIL_HOST_PASSWORD = 'Chanu1800@'  # App password if 2FA is enabled\nDEFAULT_FROM_EMAIL = 'sravanichiramana1800@gmail.com'",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "EMAIL_USE_TLS = True  # Enabling TLS for security\n# Get credentials from the environment variables\nEMAIL_HOST_USER = 'sravanichiramana1800@gmail.com'\nEMAIL_HOST_PASSWORD = 'Chanu1800@'  # App password if 2FA is enabled\nDEFAULT_FROM_EMAIL = 'sravanichiramana1800@gmail.com'",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "EMAIL_HOST_USER = 'sravanichiramana1800@gmail.com'\nEMAIL_HOST_PASSWORD = 'Chanu1800@'  # App password if 2FA is enabled\nDEFAULT_FROM_EMAIL = 'sravanichiramana1800@gmail.com'",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = 'Chanu1800@'  # App password if 2FA is enabled\nDEFAULT_FROM_EMAIL = 'sravanichiramana1800@gmail.com'",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FROM_EMAIL",
        "kind": 5,
        "importPath": "djangoauthapi_project.settings",
        "description": "djangoauthapi_project.settings",
        "peekOfCode": "DEFAULT_FROM_EMAIL = 'sravanichiramana1800@gmail.com'",
        "detail": "djangoauthapi_project.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "djangoauthapi_project.urls",
        "description": "djangoauthapi_project.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/user/', include('djangoauthapi_app.urls'))\n]",
        "detail": "djangoauthapi_project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "djangoauthapi_project.wsgi",
        "description": "djangoauthapi_project.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "djangoauthapi_project.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    dotenv.load_dotenv()  # Updated to the correct method\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'djangoauthapi_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"",
        "detail": "manage",
        "documentation": {}
    }
]